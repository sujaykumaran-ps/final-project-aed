/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Member.Member;
import Business.FieldWorker.FieldWorker;
import Business.EcoSystem;

import Business.Organization;
import Business.SnowClearingOrg.SnowClearingOrg;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author MyPC1
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminWorkAreaJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    public SystemAdminWorkAreaJPanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ecosystem=ecosystem;
        populateTree();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblSelectedNode = new javax.swing.JLabel();
        btnManageMembers = new javax.swing.JButton();
        btnManageSCOrg = new javax.swing.JButton();
        btnManageFieldWorkers = new javax.swing.JButton();
        titleManageUser = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setMinimumSize(new java.awt.Dimension(150, 776));

        jTree.setBackground(new java.awt.Color(204, 204, 204));
        jTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 501, Short.MAX_VALUE))
        );

        jSplitPane.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(252, 156, 52));

        jLabel1.setText("Selected Node:");

        btnManageMembers.setText("Manage Members");
        btnManageMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageMembersActionPerformed(evt);
            }
        });

        btnManageSCOrg.setText("Manage SnowClearingOrg");
        btnManageSCOrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageSCOrgActionPerformed(evt);
            }
        });

        btnManageFieldWorkers.setText("Manage FieldWorker");
        btnManageFieldWorkers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageFieldWorkersActionPerformed(evt);
            }
        });

        titleManageUser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titleManageUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleManageUser.setText("Manage User Accounts and Credentials");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lblSelectedNode, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(titleManageUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(542, 542, 542)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnManageFieldWorkers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnManageSCOrg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnManageMembers, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(489, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblSelectedNode, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85)
                .addComponent(titleManageUser)
                .addGap(60, 60, 60)
                .addComponent(btnManageMembers)
                .addGap(18, 18, 18)
                .addComponent(btnManageSCOrg)
                .addGap(18, 18, 18)
                .addComponent(btnManageFieldWorkers)
                .addContainerGap(464, Short.MAX_VALUE))
        );

        jSplitPane.setRightComponent(jPanel2);

        add(jSplitPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageMembersActionPerformed
        ManageMembersJPanel manageMembersJPanel=new ManageMembersJPanel(userProcessContainer, ecosystem);
        userProcessContainer.add("Manage Member",manageMembersJPanel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageMembersActionPerformed

    private void btnManageSCOrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageSCOrgActionPerformed
        ManageSnowClearingOrgJPanel manageSnowClearingOrgJPanel=new ManageSnowClearingOrgJPanel(userProcessContainer, ecosystem);
        userProcessContainer.add("Manage SnowClearingOrg",manageSnowClearingOrgJPanel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageSCOrgActionPerformed

    private void btnManageFieldWorkersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageFieldWorkersActionPerformed
        ManageFieldWorkerJPanel manageFieldWorkerJPanel=new ManageFieldWorkerJPanel(userProcessContainer, ecosystem);
        userProcessContainer.add("Manage FieldWorker",manageFieldWorkerJPanel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageFieldWorkersActionPerformed

    private void jTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeValueChanged
        
        DefaultMutableTreeNode selectedNode= (DefaultMutableTreeNode)jTree.getLastSelectedPathComponent();
        if(selectedNode!=null){
            lblSelectedNode.setText(selectedNode.toString());
        }
    }//GEN-LAST:event_jTreeValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnManageFieldWorkers;
    private javax.swing.JButton btnManageMembers;
    private javax.swing.JButton btnManageSCOrg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane;
    private javax.swing.JTree jTree;
    private javax.swing.JLabel lblSelectedNode;
    private javax.swing.JLabel titleManageUser;
    // End of variables declaration//GEN-END:variables
    public void populateTree(){
            DefaultTreeModel model=(DefaultTreeModel)jTree.getModel();
           // Add the code for draw your system structure shown by JTree
            DefaultMutableTreeNode SnowClearingOrg = new DefaultMutableTreeNode("SnowClearingOrg");
            DefaultMutableTreeNode Members = new DefaultMutableTreeNode("Member");
            DefaultMutableTreeNode DeliveryMan = new DefaultMutableTreeNode("Field Worker");
            ArrayList<SnowClearingOrg> resList = ecosystem.getSnowClearingOrgDirectory().getSnowClearingOrgList();
            DefaultMutableTreeNode root = (DefaultMutableTreeNode)model.getRoot();
             root.removeAllChildren();
            root.insert(SnowClearingOrg, 0);
            DefaultMutableTreeNode restaurantNode;
            DefaultMutableTreeNode customerNode;
            SnowClearingOrg snowClearingOrg;

            for(int i=0;i<resList.size();i++){
                snowClearingOrg=resList.get(i);
                restaurantNode = new DefaultMutableTreeNode(snowClearingOrg.getUserName());
                SnowClearingOrg.insert(restaurantNode, i);
            }

            ArrayList<Member> cusList = ecosystem.getMemberDirectory().getMemberList();
            root.insert(Members, 1);

            Member member;
            for(int i=0;i<cusList.size();i++){
                member=cusList.get(i);
                customerNode=new DefaultMutableTreeNode(member.getMemName());
                Members.insert(customerNode, i);
            }

            ArrayList<FieldWorker> fieldWorkerList = ecosystem.getFieldWorkerDirectory().getFieldWorkerList();
            root.insert(DeliveryMan, 2);
            DefaultMutableTreeNode FieldWorkerNode;
            FieldWorker fieldWorkerNode;

            for(int i=0;i<fieldWorkerList.size();i++){
                //fieldWorker = fieldWorkerList.get(i);
                //FieldWorkerNode=new DefaultMutableTreeNode(fieldWorker.);
                DeliveryMan.insert(FieldWorkerNode, i);
            }

            model.reload();

        }

}
