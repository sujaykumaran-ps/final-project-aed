/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LeafClearingOrgRole;

import Business.Member.Member;
import Business.FieldWorker.FieldWorker;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LeafWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sujay
 */
public class LeafFieldWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LeafFieldWorkRequestJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    LeafWorkRequest request;
    EcoSystem system;
    
    public LeafFieldWorkRequestJPanel(JPanel userProcessContainer, UserAccount account, LeafWorkRequest request, EcoSystem system) {
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.request = request;
        this.system = system;
        initComponents();
        populateFieldWorkers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        FieldWorkerJTable = new javax.swing.JTable();
        btnAssignRequest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1350, 780));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(255, 204, 102));
        btnBack.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnBack.setText("<< ");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 238, -1, 30));

        FieldWorkerJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Field Worker Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(FieldWorkerJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, 419, 94));

        btnAssignRequest.setBackground(new java.awt.Color(255, 204, 102));
        btnAssignRequest.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnAssignRequest.setText("Assign Request to the Selected FieldWorker");
        btnAssignRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignRequestActionPerformed(evt);
            }
        });
        add(btnAssignRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 520, -1, 35));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Assign FieldWorker");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, 333, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LeafClearingFieldWorker.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 425, 610, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fall_leaves.jpeg"))); // NOI18N
        jLabel3.setText("jLabel1");
        jLabel3.setPreferredSize(new java.awt.Dimension(1360, 780));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1420, 220));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignRequestActionPerformed
        // TODO add your handling code here:
        int selectedRow = FieldWorkerJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            
            FieldWorker fieldWorker  = (FieldWorker)FieldWorkerJTable.getValueAt(selectedRow, 0);   
            fieldWorker.getLeafRequestList().add(request);
            fieldWorker.setAvailability(false);
            request.setStatus("Assigned Field Worker");
            
            for(Member member:system.getMemberDirectory().getMemberList()){
            if(request.getMemName().equals(member.getMemUsername())){
                for(LeafWorkRequest request : member.getLeafRequestList()){
                    if(request.getStatus().equals("In Progress")){
                        request.setStatus("Assigned Field Worker");
                    }
                }
            }
        }
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
            
        }
    }//GEN-LAST:event_btnAssignRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FieldWorkerJTable;
    private javax.swing.JButton btnAssignRequest;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void populateFieldWorkers() {
        DefaultTableModel model = (DefaultTableModel) FieldWorkerJTable.getModel();
        model.setRowCount(0);
        for(FieldWorker fieldWorker:system.getFieldWorkerDirectory().getFieldWorkerList()){
            if(fieldWorker.getAvailability()==true){
               Object[] row = new Object[1];           
                row[0] = fieldWorker;
                model.addRow(row);
            }
            }
    }
}
