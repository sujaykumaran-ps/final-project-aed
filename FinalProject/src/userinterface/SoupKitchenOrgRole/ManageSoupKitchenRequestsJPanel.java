/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SoupKitchenOrgRole;

import Business.EcoSystem;
import Business.SoupKitchenOrg.SoupKitchenOrg;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SoupWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sujay
 */
public class ManageSoupKitchenRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSoupKitchenRequestsJPanel
     */
    EcoSystem system;
    JPanel userProcessContainer;
    UserAccount account;
    public ManageSoupKitchenRequestsJPanel(JPanel userProcessContainer,UserAccount account, EcoSystem system) {
        initComponents();
        this.account=account;
        this.system=system;
        this.userProcessContainer=userProcessContainer;
        populateSoupRequestsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnView = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        titleManageRequest = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblImageIcon = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnView.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        btnView.setText("View Order");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 491, 127, 30));

        btnAssign.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        btnAssign.setText("Assign for Delivery");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 540, -1, 30));

        btnRefresh.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        btnRefresh.setText("Refresh Table");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(829, 334, -1, -1));

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request ID", "Member Name", " Request Address", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequests);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 375, 580, 90));

        titleManageRequest.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        titleManageRequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleManageRequest.setText("Manage Soup Orders");
        add(titleManageRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 148, 612, -1));

        btnBack.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 148, -1, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/soup-assortment-set-various-seasonal-260nw-1499877983.jpeg"))); // NOI18N
        jLabel5.setText("jLabel1");
        jLabel5.setPreferredSize(new java.awt.Dimension(1360, 780));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 627, 680, 146));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/soup-assortment-set-various-seasonal-260nw-1499877983.jpeg"))); // NOI18N
        jLabel6.setText("jLabel1");
        jLabel6.setPreferredSize(new java.awt.Dimension(1360, 780));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 627, 680, 146));

        lblImageIcon.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        lblImageIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Requests_adobespark.jpeg"))); // NOI18N
        lblImageIcon.setText("jLabel2");
        add(lblImageIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 183, 285, 145));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/soup-assortment-set-various-seasonal-260nw-1499877983.jpeg"))); // NOI18N
        jLabel7.setText("jLabel1");
        jLabel7.setPreferredSize(new java.awt.Dimension(1360, 780));
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 18, 680, 124));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/soup-assortment-set-various-seasonal-260nw-1499877983.jpeg"))); // NOI18N
        jLabel8.setText("jLabel1");
        jLabel8.setPreferredSize(new java.awt.Dimension(1360, 780));
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 18, 680, 124));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            SoupWorkRequest request  = (SoupWorkRequest)tblRequests.getValueAt(selectedRow, 0);
            if(request.getStatus().equals("In Progress")){
                JOptionPane.showMessageDialog(null, "Order Accepted Already !!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Order Cancelled")){
                JOptionPane.showMessageDialog(null,"Order Cancelled !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Delivered")){
                JOptionPane.showMessageDialog(null,"Order Completed Already !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else{
                ViewSoupRequestJPanel viewRequest=new ViewSoupRequestJPanel(userProcessContainer, account, request, system);
                userProcessContainer.add("View Soup Request", viewRequest);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            SoupWorkRequest request  = (SoupWorkRequest)tblRequests.getValueAt(selectedRow, 0);
            if(request.getStatus().equals("New Order")){
                JOptionPane.showMessageDialog(null,"Accept the Order First", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Order Cancelled")){
                JOptionPane.showMessageDialog(null,"Request Cancelled !!! Cannot Assign.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Delivered")){
                JOptionPane.showMessageDialog(null,"Order Delivered Already !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Assigned Volunteer")){
                JOptionPane.showMessageDialog(null,"Already Assigned Field Worker !!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else{
                DeliveryRequestJPanel assignDelivery = new DeliveryRequestJPanel(userProcessContainer, account, request, system);
                userProcessContainer.add("Assign Delivery Volunteer", assignDelivery);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateSoupRequestsTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImageIcon;
    private javax.swing.JTable tblRequests;
    private javax.swing.JLabel titleManageRequest;
    // End of variables declaration//GEN-END:variables

    private void populateSoupRequestsTable() {
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();        
        model.setRowCount(0);               
        for (SoupKitchenOrg org:system.getSoupKitchenOrgDirectory().getSoupKitchenList()) {          
            if (org.getUserName().equals(account.getUsername())) {
               for(SoupWorkRequest req:org.getSoupRequestList()){
                Object[] row = new Object[4];
                row[0] = req;
                row[1] = req.getMemName();
                row[2] = req.getServiceAddress();
                row[3] = req.getStatus();
                model.addRow(row);
               }                
            }            
        }
    }
}
