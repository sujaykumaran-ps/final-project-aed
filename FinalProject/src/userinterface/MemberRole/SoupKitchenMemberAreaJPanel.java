/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MemberRole;

import Business.EcoSystem;
import Business.Member.Member;
import Business.SoupKitchenOrg.SoupKitchenOrg;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SoupWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * 
 * 
 * 
 * @author sujay
 */
public class SoupKitchenMemberAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SoupKitchenMemberAreaJPanel
     */
    private JPanel userProcessContainer;
    EcoSystem system;
    private UserAccount account;
    
    public SoupKitchenMemberAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system) {
        initComponents();
        this.account = account;
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateSoupKitchenTable();
        populateOrdersTable(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        titleOrders = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        titleChoose = new javax.swing.JLabel();
        btnReqService = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSoupKitchenOrg = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(133, 211, 255));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 48, -1, -1));

        btnRefresh.setBackground(new java.awt.Color(133, 211, 255));
        btnRefresh.setText("Refresh Requests");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 510, -1, -1));

        titleOrders.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleOrders.setText("Your Orders with us :");
        add(titleOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 365, -1, -1));

        tblOrders.setBackground(new java.awt.Color(133, 211, 255));
        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Soup Kitchen Name", "Person of Contact", "Address", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrders);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 394, 719, 90));

        titleChoose.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleChoose.setText("Choose Soup Kitchens Aroung You:");
        add(titleChoose, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 175, -1, -1));

        btnReqService.setBackground(new java.awt.Color(133, 211, 255));
        btnReqService.setText("Order Soup Meal ");
        btnReqService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqServiceActionPerformed(evt);
            }
        });
        add(btnReqService, new org.netbeans.lib.awtextra.AbsoluteConstraints(518, 315, -1, -1));

        tblSoupKitchenOrg.setBackground(new java.awt.Color(133, 211, 255));
        tblSoupKitchenOrg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Soup Kitchen Org Name", "Address", "Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSoupKitchenOrg);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 210, 546, 93));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ManageSoupKitchen.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1390, 780));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateOrdersTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnReqServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqServiceActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSoupKitchenOrg.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            SoupKitchenOrg soupKitchenOrg = (SoupKitchenOrg)tblSoupKitchenOrg.getValueAt(selectedRow, 0);
            SoupServiceJPanel orgService = new SoupServiceJPanel(userProcessContainer, account, system, soupKitchenOrg);
            userProcessContainer.add("SnowClearing Organization Service", orgService);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnReqServiceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReqService;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTable tblSoupKitchenOrg;
    private javax.swing.JLabel titleChoose;
    private javax.swing.JLabel titleOrders;
    // End of variables declaration//GEN-END:variables

    private void populateSoupKitchenTable() {
        DefaultTableModel model = (DefaultTableModel) tblSoupKitchenOrg.getModel();
        model.setRowCount(0);
        
            Object[] row = new Object[3];    
            for(SoupKitchenOrg org:system.getSoupKitchenOrgDirectory().getSoupKitchenList()){
                 row[0] = org;
                 row[1] = org.getSoupLocation();
                 row[2] = org.getSoupPhNum();
                 model.addRow(row);
            }
    }


    private void populateOrdersTable() {
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        model.setRowCount(0);

          for (Member mem:system.getMemberDirectory().getMemberList()) {   
            if (mem.getMemUsername().equals(account.getUsername())) {
               for(SoupWorkRequest service:mem.getSoupRequestList()){
                Object[] row = new Object[5];
                row[0] = service;
                row[1] = service.getSoupKitchenName();
                row[2] = service.getPersonName();
                row[3] = service.getServiceAddress();
                row[4] = service.getStatus();
                model.addRow(row);
               }            
            }  
        }
    }
}
