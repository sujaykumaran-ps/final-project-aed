/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EmergencyDistressOrgRole;

import Business.EcoSystem;
import Business.EmergencyDistressOrg.EmergencyService;
import Business.EmergencyDistressOrg.EmergencyDistressOrg;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EmergencyWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mohitdaswani
 */
public class ManageEmergencyRequestsJPanel extends javax.swing.JPanel {
    EcoSystem system;
    JPanel userProcessContainer;
    UserAccount account;
    /**
     * Creates new form ManageEmergancyRequestsJPanel
     */
    public ManageEmergencyRequestsJPanel(JPanel userProcessContainer,UserAccount account, EcoSystem system) {
        initComponents();
               this.account=account;
        this.system=system;
        this.userProcessContainer=userProcessContainer;
        populateRequestsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        titleManageRequest = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(133, 211, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        btnBack.setText("<< ");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 71, -1, -1));

        titleManageRequest.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        titleManageRequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleManageRequest.setText("Manage Emergency Requests");
        add(titleManageRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 1340, -1));

        tblRequests.setBackground(new java.awt.Color(133, 211, 255));
        tblRequests.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request ID", "Member Name", " Request Address", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequests);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 580, 87));

        btnRefresh.setBackground(new java.awt.Color(133, 211, 255));
        btnRefresh.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        btnRefresh.setText("Refresh Table");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 380, -1, -1));

        btnAssign.setBackground(new java.awt.Color(133, 211, 255));
        btnAssign.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        btnAssign.setText("Assign Request");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 495, -1, 30));

        btnView.setBackground(new java.awt.Color(133, 211, 255));
        btnView.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        btnView.setText("View Request");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(648, 496, 123, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ambulance.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 140, 1080, 740));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateRequestsTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            EmergencyWorkRequest request  = (EmergencyWorkRequest)tblRequests.getValueAt(selectedRow, 0);
            if(request.getStatus().equals("New Request")){
                JOptionPane.showMessageDialog(null,"Accept the Request First", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Request Cancelled")){
                JOptionPane.showMessageDialog(null,"Request Cancelled !!! Cannot Assign.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Pickup Completed")){
                JOptionPane.showMessageDialog(null,"Request Completed Already !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Assigned Ambulance")){
                JOptionPane.showMessageDialog(null,"Already Assigned Field Worker !!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else{
                EmergencyFieldWorkRequestJPanel assignDelivery = new EmergencyFieldWorkRequestJPanel(userProcessContainer, account, request, system);
                userProcessContainer.add("Assign Ambulance", assignDelivery);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            EmergencyWorkRequest request  = (EmergencyWorkRequest)tblRequests.getValueAt(selectedRow, 0);
            if(request.getStatus().equals("In Progress")){
                JOptionPane.showMessageDialog(null, "Request Accepted Already !!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Request Cancelled")){
                JOptionPane.showMessageDialog(null,"Request Cancelled !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Pickup Completed")){
                JOptionPane.showMessageDialog(null,"Request Completed Already !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }else{
                ViewEmergencyRequestJPanel viewRequest=new ViewEmergencyRequestJPanel(userProcessContainer, account, request, system);
                userProcessContainer.add("View Request", viewRequest);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
    }//GEN-LAST:event_btnViewActionPerformed

private void populateRequestsTable() {
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();        
        model.setRowCount(0);               
        for (EmergencyDistressOrg org:system.getEmergencyDistressOrgDirectory().getEmergencyDistressOrgList()) {          
            if (org.getUserName().equals(account.getUsername())) {
               for(EmergencyWorkRequest service:org.getRequestList()){
                Object[] row = new Object[4];
                row[0] = service;
                row[1] = service.getMemName();
                row[2] = service.getPickupAddress();
                row[3] = service.getStatus();
                model.addRow(row);
               }                
            }            
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequests;
    private javax.swing.JLabel titleManageRequest;
    // End of variables declaration//GEN-END:variables
}
