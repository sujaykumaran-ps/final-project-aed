/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.FundRaising.FundRaising;
import Business.Role.FundRaisingRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nagashreeseshadri
 */
public class ManageFundRaisingJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFundRaisingJPanel
     */
   private JPanel userProcessContainer;
    private EcoSystem system;
    UserAccount user;
    
    public ManageFundRaisingJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblFundRaisingEnt = new javax.swing.JTable();
        txtOrgName = new javax.swing.JTextField();
        btnManageFundBack = new javax.swing.JButton();
        btnSubmitFund = new javax.swing.JButton();
        lblResName = new javax.swing.JLabel();
        txtOrgUsername = new javax.swing.JTextField();
        txtOrgPassword = new javax.swing.JPasswordField();
        lblResPassword = new javax.swing.JLabel();
        btnUpdateFund = new javax.swing.JButton();
        btnDeleteEnt = new javax.swing.JButton();
        lblResUsername = new javax.swing.JLabel();
        titleManageRestaurants = new javax.swing.JLabel();
        btnViewFundEnt = new javax.swing.JButton();
        btnRefreshEnt = new javax.swing.JButton();

        tblFundRaisingEnt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "FundRaising Enterprise Name", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFundRaisingEnt);

        btnManageFundBack.setText("<< Back");
        btnManageFundBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageFundBackActionPerformed(evt);
            }
        });

        btnSubmitFund.setText("Submit");
        btnSubmitFund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitFundActionPerformed(evt);
            }
        });

        lblResName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblResName.setText("FundRaising Enterprise Name:");

        lblResPassword.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblResPassword.setText("Password:");

        btnUpdateFund.setText("Update");
        btnUpdateFund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateFundActionPerformed(evt);
            }
        });

        btnDeleteEnt.setText("Delete");
        btnDeleteEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEntActionPerformed(evt);
            }
        });

        lblResUsername.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblResUsername.setText("Username:");

        titleManageRestaurants.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titleManageRestaurants.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleManageRestaurants.setText("Manage FundRaising Enterprises");

        btnViewFundEnt.setText("View");
        btnViewFundEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFundEntActionPerformed(evt);
            }
        });

        btnRefreshEnt.setText("Refresh Table");
        btnRefreshEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshEntActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnManageFundBack)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(440, 440, 440)
                        .addComponent(btnViewFundEnt)
                        .addGap(5, 5, 5)
                        .addComponent(btnDeleteEnt))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(lblResName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtOrgName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(lblResUsername)
                        .addGap(39, 39, 39)
                        .addComponent(txtOrgUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(lblResPassword)
                        .addGap(41, 41, 41)
                        .addComponent(txtOrgPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(btnSubmitFund))
                            .addComponent(btnUpdateFund))))
                .addContainerGap(178, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefreshEnt)
                .addGap(151, 151, 151))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 50, Short.MAX_VALUE)
                    .addComponent(titleManageRestaurants, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 50, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(btnManageFundBack)
                .addGap(10, 10, 10)
                .addComponent(btnRefreshEnt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewFundEnt)
                    .addComponent(btnDeleteEnt))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrgName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblResName))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblResUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrgUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblResPassword)
                    .addComponent(txtOrgPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSubmitFund)
                    .addComponent(btnUpdateFund))
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 103, Short.MAX_VALUE)
                    .addComponent(titleManageRestaurants)
                    .addGap(0, 560, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageFundBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageFundBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdmin = (SystemAdminWorkAreaJPanel) component;
        sysAdmin.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnManageFundBackActionPerformed

    private void btnSubmitFundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitFundActionPerformed
        String name = txtOrgName.getText();
        String username = txtOrgUsername.getText();
        String password = txtOrgPassword.getText();

        try {
            if(name == null || name.isEmpty()){
                throw new NullPointerException("Name Field Cannot be Empty !!!");
            }else if(Pattern.matches("^[A-Za-z ]+$", name) == false){
                throw new Exception("Please Enter a valid Name !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Name Field Cannot be Empty !!!");
            return;
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Please Enter a valid Name !!!");
            return;
        }

        try {
            if(username == null || username.isEmpty()){
                throw new NullPointerException("Username Field Cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Username Field Cannot be Empty !!!");
            return;
        }

        try {
            if(password == null || password.isEmpty()){
                throw new NullPointerException("Password Field Cannot be Empty !!!");
            }else if(password.length() < 5){
                throw new Exception("Password is too weak !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Password Field Cannot be Empty !!!");
            return;
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Password is too weak !!!");
            return;
        }

        if (system.getUserAccountDirectory().checkIfUsernameIsUnique(username) == false) {
            JOptionPane.showMessageDialog(null,"Username Already Exists ! Please enter a different Username !!!");
        }else{

            UserAccount ua = system.getUserAccountDirectory().createUserAccount(name, username,
                password, null, new FundRaisingRole());
            FundRaising org = system.getFundRaisingDirectory().createFundRaisingInfo(username);

            populateFundRaisingTable();

            txtOrgName.setText("");
            txtOrgUsername.setText("");
            txtOrgPassword.setText("");
        }
    }//GEN-LAST:event_btnSubmitFundActionPerformed

    private void btnUpdateFundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateFundActionPerformed
        // TODO add your handling code here:
        String name = txtOrgName.getText();
        String username = txtOrgUsername.getText();
        String password = txtOrgPassword.getText();

        try {
            if(name == null || name.isEmpty()){
                throw new NullPointerException("Name Field Cannot be Empty !!!");
            }else if(Pattern.matches("^[A-Za-z ]+$", name) == false){
                throw new Exception("Please Enter a valid Name !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Name Field Cannot be Empty !!!");
            return;
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Please Enter a valid Name !!!");
            return;
        }

        try {
            if(username == null || username.isEmpty()){
                throw new NullPointerException("Username Field Cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Username Field Cannot be Empty !!!");
            return;
        }

        try {
            if(password == null || password.isEmpty()){
                throw new NullPointerException("Password Field Cannot be Empty !!!");
            }else if(password.length() < 5){
                throw new Exception("Password is too weak !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Password Field Cannot be Empty !!!");
            return;
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Password is too weak !!!");
            return;
        }

        system.getUserAccountDirectory().updateUserAccount(user, name, username, password);
        populateFundRaisingTable();
        btnSubmitFund.setEnabled(true);
        btnDeleteEnt.setEnabled(true);
        btnViewFundEnt.setEnabled(true);
        btnUpdateFund.setEnabled(false);
        txtOrgName.setText("");
        txtOrgUsername.setText("");
        txtOrgPassword.setText("");
    }//GEN-LAST:event_btnUpdateFundActionPerformed

    private void btnDeleteEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEntActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFundRaisingEnt.getSelectedRow();

        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a SnowClearingOrg Detail to Delete !!!");
            return;
        }
        else {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are You Sure ???", "Warning", selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                String username = (String) tblFundRaisingEnt.getValueAt(selectedRow, 1);
                String pwd = (String) tblFundRaisingEnt.getValueAt(selectedRow, 2);

                UserAccount user = system.getUserAccountDirectory().authenticateUser(username, pwd);
                system.getUserAccountDirectory().deleteUserAccount(user);

                system.getSnowClearingOrgDirectory().deleteSnowClearingOrg(user.getUsername());
                populateFundRaisingTable();

            }
        }
    }//GEN-LAST:event_btnDeleteEntActionPerformed

    private void btnViewFundEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFundEntActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFundRaisingEnt.getSelectedRow();

        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a SnowClearingOrg Detail to View !!!");
            return;
        }

        else{
            String username = (String) tblFundRaisingEnt.getValueAt(selectedRow, 1);
            String pwd = (String) tblFundRaisingEnt.getValueAt(selectedRow, 2);
            user = system.getUserAccountDirectory().authenticateUser(username, pwd);

            txtOrgName.setText(user.getName()+"");
            txtOrgUsername.setText(user.getUsername()+"");
            txtOrgPassword.setText(user.getPassword()+"");

        }

        btnSubmitFund.setEnabled(false);
        btnDeleteEnt.setEnabled(false);
        btnViewFundEnt.setEnabled(false);
        btnUpdateFund.setEnabled(true);
    }//GEN-LAST:event_btnViewFundEntActionPerformed

    private void btnRefreshEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshEntActionPerformed
        // TODO add your handling code here:
        populateFundRaisingTable();
    }//GEN-LAST:event_btnRefreshEntActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteEnt;
    private javax.swing.JButton btnManageFundBack;
    private javax.swing.JButton btnRefreshEnt;
    private javax.swing.JButton btnSubmitFund;
    private javax.swing.JButton btnUpdateFund;
    private javax.swing.JButton btnViewFundEnt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblResName;
    private javax.swing.JLabel lblResPassword;
    private javax.swing.JLabel lblResUsername;
    private javax.swing.JTable tblFundRaisingEnt;
    private javax.swing.JLabel titleManageRestaurants;
    private javax.swing.JTextField txtOrgName;
    private javax.swing.JPasswordField txtOrgPassword;
    private javax.swing.JTextField txtOrgUsername;
    // End of variables declaration//GEN-END:variables

    private void populateFundRaisingTable() {
        DefaultTableModel model = (DefaultTableModel) tblFundRaisingEnt.getModel();
        model.setRowCount(0);
        
        
        
        for (UserAccount user : system.getUserAccountDirectory().getUserAccountList()) {
           

            //System.out.println(user);
            

            if ("Business.Role.FundRaisingRole".equals(user.getRole().getClass().getName())) {
                Object[] row = new Object[3]; 
                row[0] = user.getName();
                row[1] = user.getUsername();
                row[2] = user.getPassword();
                
                model.addRow(row);
            }
            
        }
    
    }
}
