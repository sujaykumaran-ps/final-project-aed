/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MemberRole;

import Business.Member.Member;
import Business.EcoSystem;
import Business.SnowClearingOrg.SnowClearingOrg;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class MemberAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    EcoSystem system;
    private UserAccount account;
    
    /**
     * Creates new form DoctorWorkAreaJPanel
     */

    
    public MemberAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system) {
        initComponents();      
        this.account = account;
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateSnowOrgTable();
        populateRequestsTable();  
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSnowClearingOrg = new javax.swing.JTable();
        btnReqService = new javax.swing.JButton();
        titleChoose = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        titleOrders = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(252, 156, 52));
        setPreferredSize(new java.awt.Dimension(900, 900));

        tblSnowClearingOrg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "SnowClearingOrg Name", "Address", "Phone Number", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSnowClearingOrg);

        btnReqService.setText("Request Service");
        btnReqService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqServiceActionPerformed(evt);
            }
        });

        titleChoose.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleChoose.setText("Choose from your SnowClearing Organizations Nearby :");

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request ID", "SnowClearingOrg Name", "Address", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRequests);

        titleOrders.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleOrders.setText("Your Requests with us :");

        btnRefresh.setText("Refresh Requests");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titleChoose)
                            .addComponent(titleOrders)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addComponent(btnRefresh))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(btnReqService))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnBack)))
                .addContainerGap(199, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnBack)
                .addGap(30, 30, 30)
                .addComponent(titleChoose)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReqService)
                .addGap(21, 21, 21)
                .addComponent(titleOrders)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnRefresh)
                .addContainerGap(91, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateRequestsTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnReqServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqServiceActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSnowClearingOrg.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            SnowClearingOrg snowClearingOrg = (SnowClearingOrg)tblSnowClearingOrg.getValueAt(selectedRow, 0);
            SnowOrgServiceJPanel orgService = new SnowOrgServiceJPanel(userProcessContainer, account, system, snowClearingOrg);
            userProcessContainer.add("SnowClearing Organization Service", orgService);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnReqServiceActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReqService;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblRequests;
    private javax.swing.JTable tblSnowClearingOrg;
    private javax.swing.JLabel titleChoose;
    private javax.swing.JLabel titleOrders;
    // End of variables declaration//GEN-END:variables

    private void populateSnowOrgTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblSnowClearingOrg.getModel();
        model.setRowCount(0);
        
            Object[] row = new Object[4];    
            for(SnowClearingOrg org:system.getSnowClearingOrgDirectory().getSnowClearingOrgList()){
                 row[0] = org;
                 row[1] = org.getSnowOrgAddress();
                 row[2] = org.getSnowOrgPhNum();
                 row[3] = org.getSnowOrgEmail();
                 model.addRow(row);
            }
            
    }

    public void populateRequestsTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
        model.setRowCount(0);

          for (Member mem:system.getMemberDirectory().getMemberList()) {   
            if (mem.getMemUsername().equals(account.getUsername())) {
               for(WorkRequest service:mem.getRequestList()){
                Object[] row = new Object[4];
                row[0] = service;
                row[1] = service.getSnowOrgName();
                row[2] = service.getServiceAddress();
                row[3] = service.getStatus();
                model.addRow(row);
               }            
            }  
        }
    }
}
